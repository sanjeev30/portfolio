{"version":3,"file":"static/js/927.cda8afb0.chunk.js","mappings":"6KAgBA,MAkEA,EAlE4CA,IAAkB,IAAjB,QAAEC,GAASD,EACpD,OACIE,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACPC,UAAU,wKACVC,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,KAAQE,SAAA,EAG3BC,EAAAA,EAAAA,KAACP,EAAAA,EAAOQ,IAAG,CACPC,IAAKX,EAAQY,MACbC,IAAKb,EAAQc,MACbV,UAAU,oEACVW,QAAQ,OACRV,WAAY,CAAEW,QAAS,QAI3Bf,EAAAA,EAAAA,MAAA,OAAKG,UAAU,8BAA6BI,SAAA,EACxCC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,uDAAsDI,SAC/DR,EAAQc,SAEbL,EAAAA,EAAAA,KAAA,KAAGL,UAAU,kDAAiDI,SACzDR,EAAQiB,eAIbR,EAAAA,EAAAA,KAAA,OAAKL,UAAU,4BAA2BI,SACrCR,EAAQkB,OAAOC,KAAI,CAACC,EAAOC,KACxBZ,EAAAA,EAAAA,KAACP,EAAAA,EAAOoB,KAAI,CAERlB,UAAU,wFACVC,WAAY,CAAEC,MAAO,KAAOE,SAE3BY,GAJIC,QAUjBpB,EAAAA,EAAAA,MAAA,OAAKG,UAAU,yBAAwBI,SAAA,EACnCC,EAAAA,EAAAA,KAAA,KACIc,KAAMvB,EAAQwB,SACdC,OAAO,SACPC,IAAI,sBACJtB,UAAU,mEACV,aAAW,oBAAmBI,UAE9BC,EAAAA,EAAAA,KAACkB,EAAAA,IAAQ,CAACC,KAAM,OAEnB5B,EAAQ6B,WACLpB,EAAAA,EAAAA,KAAA,KACIc,KAAMvB,EAAQ6B,SACdJ,OAAO,SACPC,IAAI,sBACJtB,UAAU,qEACV,aAAW,YAAWI,UAEtBC,EAAAA,EAAAA,KAACqB,EAAAA,IAAiB,CAACF,KAAM,eAKhC,ECxEfG,EAAW,CACb,CACIC,GAAI,EACJlB,MAAO,mBACPG,YAAa,gDACbL,M,8DACAY,SAAU,gDACVN,OAAQ,CAAC,SAAU,aAAc,eA6CzC,EAhC2Be,KAEnBhC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,8LAA6LI,SAAA,EAExMC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,2IACfK,EAAAA,EAAAA,KAAA,OAAKL,UAAU,iKAGfK,EAAAA,EAAAA,KAACP,EAAAA,EAAOgC,GAAE,CACNC,QAAS,CAAEnB,QAAS,EAAGoB,GAAI,IAC3BC,QAAS,CAAErB,QAAS,EAAGoB,EAAG,GAC1BE,WAAY,CAAEC,SAAU,GACxBnC,UAAU,sFAAqFI,SAClG,iBAKDC,EAAAA,EAAAA,KAACP,EAAAA,EAAOC,IAAG,CACPC,UAAU,2CACV+B,QAAS,CAAEnB,QAAS,EAAGoB,EAAG,IAC1BC,QAAS,CAAErB,QAAS,EAAGoB,EAAG,GAC1BE,WAAY,CAAEC,SAAU,EAAGC,MAAO,IAAMhC,SAEvCuB,EAASZ,KAAKnB,IACXS,EAAAA,EAAAA,KAACgC,EAAW,CAAkBzC,QAASA,GAArBA,EAAQgC,U","sources":["components/ProjectCard.tsx","pages/Projects.tsx"],"sourcesContent":["import React from 'react';\nimport { FaGithub, FaExternalLinkAlt } from 'react-icons/fa';\nimport { motion } from 'framer-motion';\n\ninterface ProjectProps {\n    project: {\n        id: number;\n        title: string;\n        description: string;\n        image: string;\n        repoLink: string;\n        liveDemo?: string; // Optional live link\n        skills: string[];  // List of skills for the project\n    };\n}\n\nconst ProjectCard: React.FC<ProjectProps> = ({ project }) => {\n    return (\n        <motion.div\n            className=\"bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-md flex flex-col lg:flex-row transition-transform transform hover:scale-105 hover:shadow-xl w-4/5 mx-auto\" // Subtle hover effect with shadow\n            whileHover={{ scale: 1.02 }} // Small scale for a lift effect\n            whileTap={{ scale: 0.98 }} // Slight tap effect\n        >\n            {/* Project Image (Left side on large screens) */}\n            <motion.img\n                src={project.image}\n                alt={project.title}\n                className=\"w-full lg:w-1/3 h-64 object-cover transition-opacity duration-300\"\n                loading=\"lazy\"\n                whileHover={{ opacity: 0.95 }} // Subtle opacity change on hover\n            />\n\n            {/* Project Details (Right side on large screens) */}\n            <div className=\"p-6 flex flex-col flex-grow\">\n                <h2 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-white\">\n                    {project.title}\n                </h2>\n                <p className=\"text-gray-700 dark:text-gray-300 flex-grow mb-4\">\n                    {project.description}\n                </p>\n\n                {/* Skills Tags with Hover Effect */}\n                <div className=\"flex flex-wrap gap-2 mb-4\">\n                    {project.skills.map((skill, idx) => (\n                        <motion.span\n                            key={idx}\n                            className=\"bg-blue-500 text-white px-2 py-1 rounded-lg text-xs transition-transform duration-300\"\n                            whileHover={{ scale: 1.1 }} // Increase size slightly on hover\n                        >\n                            {skill}\n                        </motion.span>\n                    ))}\n                </div>\n\n                {/* Action Buttons */}\n                <div className=\"mt-auto flex space-x-4\">\n                    <a\n                        href={project.repoLink}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-blue-500 hover:text-blue-700 transition-colors duration-300\"\n                        aria-label=\"GitHub Repository\"\n                    >\n                        <FaGithub size={24} />\n                    </a>\n                    {project.liveDemo && (\n                        <a\n                            href={project.liveDemo}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"text-green-500 hover:text-green-700 transition-colors duration-300\"\n                            aria-label=\"Live Demo\"\n                        >\n                            <FaExternalLinkAlt size={24} />\n                        </a>\n                    )}\n                </div>\n            </div>\n        </motion.div>\n    );\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport ProjectCard from '../components/ProjectCard';\nimport { motion } from 'framer-motion'; // For animations\n\nimport deepCompression from '../assets/projects/deep-compression.webp';\n\nconst projects = [\n    {\n        id: 1,\n        title: 'Deep Compression',\n        description: 'Demonstrated Neural Network Model Compression',\n        image: deepCompression,\n        repoLink: 'https://github.com/sanjeev30/deep-compression',\n        skills: ['Python', 'Tensorflow', 'ResNet-50']\n    },\n    // {\n    //     id: 2,\n    //     title: 'Project Two',\n    //     description: 'A brief description of Project Two.',\n    //     image: 'https://picsum.photos/seed/picsum2/400/300',\n    //     repoLink: 'https://github.com/yourusername/project-two',\n    //     skills: ['Python', 'Flask', 'PostgreSQL'], // Example skills\n    // },\n    // Add more projects as needed\n];\n\nconst Projects: React.FC = () => {\n    return (\n        <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-light-blue-400 via-violet-400 to-coral-400 dark:from-gray-800 dark:to-gray-900 relative overflow-hidden py-12\">\n            {/* Blurred Background Effect */}\n            <div className=\"absolute -top-16 -left-16 w-96 h-96 bg-gradient-to-tr from-green-400 to-blue-500 rounded-full filter blur-3xl opacity-40 animate-blob\"></div>\n            <div className=\"absolute bottom-0 right-0 w-72 h-72 bg-gradient-to-tr from-pink-400 to-purple-500 rounded-full filter blur-3xl opacity-40 animate-blob animation-delay-3000\"></div>\n\n            {/* Title */}\n            <motion.h1\n                initial={{ opacity: 0, y: -50 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 1 }}\n                className=\"text-4xl sm:text-5xl font-bold text-center mb-12 text-gray-900 dark:text-white z-10\"\n            >\n                My Projects\n            </motion.h1>\n\n            {/* Projects List */}\n            <motion.div\n                className=\"w-full flex flex-col space-y-8 z-10 px-4\"\n                initial={{ opacity: 0, y: 50 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 1, delay: 0.5 }}\n            >\n                {projects.map((project) => (\n                    <ProjectCard key={project.id} project={project} />\n                ))}\n            </motion.div>\n        </div>\n    );\n};\n\nexport default Projects;\n"],"names":["_ref","project","_jsxs","motion","div","className","whileHover","scale","whileTap","children","_jsx","img","src","image","alt","title","loading","opacity","description","skills","map","skill","idx","span","href","repoLink","target","rel","FaGithub","size","liveDemo","FaExternalLinkAlt","projects","id","Projects","h1","initial","y","animate","transition","duration","delay","ProjectCard"],"sourceRoot":""}